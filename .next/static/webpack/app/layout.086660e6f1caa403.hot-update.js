"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/providers/apollo.tsx":
/*!**********************************!*\
  !*** ./src/providers/apollo.tsx ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ApolloWrapper: function() { return /* binding */ ApolloWrapper; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _apollo_client__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @apollo/client */ \"(app-pages-browser)/./node_modules/@apollo/client/link/http/HttpLink.js\");\n/* harmony import */ var _apollo_experimental_nextjs_app_support_ssr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @apollo/experimental-nextjs-app-support/ssr */ \"(app-pages-browser)/./node_modules/@apollo/experimental-nextjs-app-support/dist/ssr/index.js\");\n/* __next_internal_client_entry_do_not_use__ ApolloWrapper auto */ \n// The content of this file was copied from the official Apollo Github repository:\n// https://www.npmjs.com/package/@apollo/experimental-nextjs-app-support\n\n\nfunction makeClient() {\n    const httpLink = new _apollo_client__WEBPACK_IMPORTED_MODULE_2__.HttpLink({\n        uri: \"https://countries.trevorblades.com/\",\n        fetchOptions: {\n            cache: \"no-store\"\n        }\n    });\n    return new _apollo_experimental_nextjs_app_support_ssr__WEBPACK_IMPORTED_MODULE_1__.NextSSRApolloClient({\n        cache: new _apollo_experimental_nextjs_app_support_ssr__WEBPACK_IMPORTED_MODULE_1__.NextSSRInMemoryCache(),\n        link:  false ? 0 : httpLink\n    });\n}\n/**\n * A component that wraps the given children with the\n * ApolloNextAppProvider component, which provides the Apollo Client\n * instance to all components within the subtree.\n *\n * The makeClient function is called with no arguments, and is expected\n * to return a new Apollo Client instance.\n *\n * @param {{ children: React.ReactNode }} props\n * @returns {JSX.Element}\n */ function ApolloWrapper(param) {\n    let { children } = param;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_apollo_experimental_nextjs_app_support_ssr__WEBPACK_IMPORTED_MODULE_1__.ApolloNextAppProvider, {\n        makeClient: makeClient,\n        children: children\n    }, void 0, false, {\n        fileName: \"/Users/danielguilhermewernerortiz/Repos/leonardoAI/web-api-challenge/src/providers/apollo.tsx\",\n        lineNumber: 47,\n        columnNumber: 5\n    }, this);\n}\n_c = ApolloWrapper;\nvar _c;\n$RefreshReg$(_c, \"ApolloWrapper\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9wcm92aWRlcnMvYXBvbGxvLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUVBLGtGQUFrRjtBQUNsRix3RUFBd0U7QUFFbEI7QUFNRDtBQUVyRCxTQUFTTTtJQUNQLE1BQU1DLFdBQVcsSUFBSU4sb0RBQVFBLENBQUM7UUFDNUJPLEtBQUs7UUFDTEMsY0FBYztZQUFFQyxPQUFPO1FBQVc7SUFDcEM7SUFFQSxPQUFPLElBQUlQLDRGQUFtQkEsQ0FBQztRQUM3Qk8sT0FBTyxJQUFJTiw2RkFBb0JBO1FBQy9CTyxNQUNFLE1BQTZCLEdBQ3pCWCxDQUtFLEdBQ0ZPO0lBQ1I7QUFDRjtBQUVBOzs7Ozs7Ozs7O0NBVUMsR0FDTSxTQUFTTyxjQUFjLEtBQXFDO1FBQXJDLEVBQUVDLFFBQVEsRUFBMkIsR0FBckM7SUFDNUIscUJBQ0UsOERBQUNiLDhGQUFxQkE7UUFBQ0ksWUFBWUE7a0JBQ2hDUzs7Ozs7O0FBR1A7S0FOZ0JEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9wcm92aWRlcnMvYXBvbGxvLnRzeD81NDQxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIGNsaWVudFwiO1xuXG4vLyBUaGUgY29udGVudCBvZiB0aGlzIGZpbGUgd2FzIGNvcGllZCBmcm9tIHRoZSBvZmZpY2lhbCBBcG9sbG8gR2l0aHViIHJlcG9zaXRvcnk6XG4vLyBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9AYXBvbGxvL2V4cGVyaW1lbnRhbC1uZXh0anMtYXBwLXN1cHBvcnRcblxuaW1wb3J0IHsgQXBvbGxvTGluaywgSHR0cExpbmsgfSBmcm9tIFwiQGFwb2xsby9jbGllbnRcIjtcbmltcG9ydCB7XG4gIEFwb2xsb05leHRBcHBQcm92aWRlcixcbiAgTmV4dFNTUkFwb2xsb0NsaWVudCxcbiAgTmV4dFNTUkluTWVtb3J5Q2FjaGUsXG4gIFNTUk11bHRpcGFydExpbmssXG59IGZyb20gXCJAYXBvbGxvL2V4cGVyaW1lbnRhbC1uZXh0anMtYXBwLXN1cHBvcnQvc3NyXCI7XG5cbmZ1bmN0aW9uIG1ha2VDbGllbnQoKSB7XG4gIGNvbnN0IGh0dHBMaW5rID0gbmV3IEh0dHBMaW5rKHtcbiAgICB1cmk6IFwiaHR0cHM6Ly9jb3VudHJpZXMudHJldm9yYmxhZGVzLmNvbS9cIixcbiAgICBmZXRjaE9wdGlvbnM6IHsgY2FjaGU6IFwibm8tc3RvcmVcIiB9LFxuICB9KTtcblxuICByZXR1cm4gbmV3IE5leHRTU1JBcG9sbG9DbGllbnQoe1xuICAgIGNhY2hlOiBuZXcgTmV4dFNTUkluTWVtb3J5Q2FjaGUoKSxcbiAgICBsaW5rOlxuICAgICAgdHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIlxuICAgICAgICA/IEFwb2xsb0xpbmsuZnJvbShbXG4gICAgICAgICAgICBuZXcgU1NSTXVsdGlwYXJ0TGluayh7XG4gICAgICAgICAgICAgIHN0cmlwRGVmZXI6IHRydWUsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGh0dHBMaW5rLFxuICAgICAgICAgIF0pXG4gICAgICAgIDogaHR0cExpbmssXG4gIH0pO1xufVxuXG4vKipcbiAqIEEgY29tcG9uZW50IHRoYXQgd3JhcHMgdGhlIGdpdmVuIGNoaWxkcmVuIHdpdGggdGhlXG4gKiBBcG9sbG9OZXh0QXBwUHJvdmlkZXIgY29tcG9uZW50LCB3aGljaCBwcm92aWRlcyB0aGUgQXBvbGxvIENsaWVudFxuICogaW5zdGFuY2UgdG8gYWxsIGNvbXBvbmVudHMgd2l0aGluIHRoZSBzdWJ0cmVlLlxuICpcbiAqIFRoZSBtYWtlQ2xpZW50IGZ1bmN0aW9uIGlzIGNhbGxlZCB3aXRoIG5vIGFyZ3VtZW50cywgYW5kIGlzIGV4cGVjdGVkXG4gKiB0byByZXR1cm4gYSBuZXcgQXBvbGxvIENsaWVudCBpbnN0YW5jZS5cbiAqXG4gKiBAcGFyYW0ge3sgY2hpbGRyZW46IFJlYWN0LlJlYWN0Tm9kZSB9fSBwcm9wc1xuICogQHJldHVybnMge0pTWC5FbGVtZW50fVxuICovXG5leHBvcnQgZnVuY3Rpb24gQXBvbGxvV3JhcHBlcih7IGNoaWxkcmVuIH06IFJlYWN0LlByb3BzV2l0aENoaWxkcmVuKSB7XG4gIHJldHVybiAoXG4gICAgPEFwb2xsb05leHRBcHBQcm92aWRlciBtYWtlQ2xpZW50PXttYWtlQ2xpZW50fT5cbiAgICAgIHtjaGlsZHJlbn1cbiAgICA8L0Fwb2xsb05leHRBcHBQcm92aWRlcj5cbiAgKTtcbn1cbiJdLCJuYW1lcyI6WyJBcG9sbG9MaW5rIiwiSHR0cExpbmsiLCJBcG9sbG9OZXh0QXBwUHJvdmlkZXIiLCJOZXh0U1NSQXBvbGxvQ2xpZW50IiwiTmV4dFNTUkluTWVtb3J5Q2FjaGUiLCJTU1JNdWx0aXBhcnRMaW5rIiwibWFrZUNsaWVudCIsImh0dHBMaW5rIiwidXJpIiwiZmV0Y2hPcHRpb25zIiwiY2FjaGUiLCJsaW5rIiwiZnJvbSIsInN0cmlwRGVmZXIiLCJBcG9sbG9XcmFwcGVyIiwiY2hpbGRyZW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/providers/apollo.tsx\n"));

/***/ })

});